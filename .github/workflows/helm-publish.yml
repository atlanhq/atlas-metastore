name: Build & Publish Helm Chart

on:
  workflow_run:
    workflows: ["Java CI with Maven"]
    types: [completed]
    branches:
      - beta
      - master
      - staging
      - atlas-ci-cd-updates

jobs:
  helm-publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        chart: [atlas, atlas-read]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      
      - name: Get branch name
        id: branch
        run: |
          echo "name=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT
      
      - name: Get commit ID
        id: commit
        run: |
          echo "id=$(echo ${GITHUB_SHA} | cut -c1-7)abcd" >> $GITHUB_OUTPUT
      
      - name: Generate chart version
        id: version
        run: |
          # Semantic version: 1.0.0-branch.commitid
          CHART_VERSION="1.0.0-${{ steps.branch.outputs.name }}.${{ steps.commit.outputs.id }}"
          echo "chart=${CHART_VERSION}" >> $GITHUB_OUTPUT
          echo "Generated chart version: ${CHART_VERSION}"
      
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'
      
      - name: Update Chart.yaml with version
        run: |
          sed -i "s/^version: .*/version: ${{ steps.version.outputs.chart }}/" helm/${{ matrix.chart }}/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: \"${{ steps.commit.outputs.id }}\"/" helm/${{ matrix.chart }}/Chart.yaml
          
          echo "Updated ${{ matrix.chart }}/Chart.yaml:"
          cat helm/${{ matrix.chart }}/Chart.yaml | grep -E "^(version|appVersion):"
      
      - name: Update values.yaml with image tags
        run: |
          # Replace placeholders with actual values
          sed -i "s/ATLAS_LATEST_IMAGE_TAG/${{ steps.commit.outputs.id }}/g" helm/${{ matrix.chart }}/values.yaml
          sed -i "s/ATLAS_BRANCH_NAME/${{ steps.branch.outputs.name }}/g" helm/${{ matrix.chart }}/values.yaml
          
          echo "Image configuration in ${{ matrix.chart }}/values.yaml:"
          grep -A 3 "image:" helm/${{ matrix.chart }}/values.yaml | head -5
      
      - name: Update helm dependencies
        run: |
          cd helm/${{ matrix.chart }}
          helm dependency update
          
          echo "Chart dependencies:"
          ls -la charts/
      
      - name: Lint helm chart
        run: |
          helm lint helm/${{ matrix.chart }}/
      
      - name: Package helm chart
        run: |
          mkdir -p helm-packages
          helm package helm/${{ matrix.chart }}/ --destination ./helm-packages/
          
          echo "Packaged charts:"
          ls -lh helm-packages/
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: $GITHUB_ACTOR
          password: ${{ secrets.ORG_PAT_GITHUB }}
      
      - name: Push chart to GHCR (OCI Registry)
        run: |
          CHART_FILE=$(ls helm-packages/${{ matrix.chart }}-*.tgz)
          echo "Pushing chart: ${CHART_FILE}"
          
          helm push ${CHART_FILE} oci://ghcr.io/atlanhq/helm-charts
          
          echo "✅ Chart published successfully!"
          echo "📦 Chart: ${{ matrix.chart }}"
          echo "📌 Version: ${{ steps.version.outputs.chart }}"
          echo "🏷️  Registry: oci://ghcr.io/atlanhq/helm-charts/${{ matrix.chart }}"
      
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: helm-${{ matrix.chart }}-v${{ steps.version.outputs.chart }}
          name: "${{ matrix.chart }} Helm Chart v${{ steps.version.outputs.chart }}"
          body: |
            ## 📦 ${{ matrix.chart }} Helm Chart Release
            
            **Chart**: `${{ matrix.chart }}`  
            **Chart Version**: `${{ steps.version.outputs.chart }}`  
            **App Version**: `${{ steps.commit.outputs.id }}`  
            **Branch**: `${{ steps.branch.outputs.name }}`
            
            ### 🐳 Docker Image
            ```
            ghcr.io/atlanhq/atlas-metastore-${{ steps.branch.outputs.name }}:${{ steps.commit.outputs.id }}
            ```
            
            ### 📥 Installation
            
            **Via OCI Registry (Recommended):**
            ```bash
            helm install ${{ matrix.chart }} oci://ghcr.io/atlanhq/helm-charts/${{ matrix.chart }} \
              --version ${{ steps.version.outputs.chart }}
            ```
            
            **Via Downloaded Chart:**
            ```bash
            helm install ${{ matrix.chart }} ./${{ matrix.chart }}-${{ steps.version.outputs.chart }}.tgz
            ```
            
            ---
            
            🔗 **Triggered by**: ${{ github.event.workflow_run.html_url }}
          artifacts: "./helm-packages/${{ matrix.chart }}-*.tgz"
          token: ${{ secrets.GITHUB_TOKEN }}
          makeLatest: false
      
      - name: Chart publish summary
        run: |
          echo "## 🎉 Helm Chart Published Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Chart**: ${{ matrix.chart }}" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: ${{ steps.version.outputs.chart }}" >> $GITHUB_STEP_SUMMARY
          echo "**Registry**: oci://ghcr.io/atlanhq/helm-charts/${{ matrix.chart }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation Command" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "helm install ${{ matrix.chart }} oci://ghcr.io/atlanhq/helm-charts/${{ matrix.chart }} --version ${{ steps.version.outputs.chart }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note**: Chart versions will be updated in atlan repo via existing chart-release-dispatcher workflow" >> $GITHUB_STEP_SUMMARY
