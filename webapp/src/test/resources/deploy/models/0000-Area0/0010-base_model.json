{
  "classificationDefs":
  [],
  "enumDefs":
  [
    {
      "category": "ENUM",
      "name": "SourceCostUnitType",
      "description": "Unit used when calculating cost of source queries.",
      "serviceType": "atlas_core",
      "typeVersion": "1.1",
      "elementDefs":
      [
        {
          "value": "Credits",
          "ordinal": 0
        },
        {
          "value": "bytes",
          "ordinal": 1
        },
        {
          "value": "slot-ms",
          "ordinal": 2
        }
      ]
    },
    {
      "name": "AtlasGlossaryTermRelationshipStatus",
      "description": "How reliable the relationship is between two glossary terms.",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "DRAFT",
          "description": "DRAFT means the relationship is under development."
        },
        {
          "ordinal": 1,
          "value": "ACTIVE",
          "description": "ACTIVE means the relationship is validated and in use."
        },
        {
          "ordinal": 2,
          "value": "DEPRECATED",
          "description": "DEPRECATED means the the relationship is being phased out."
        },
        {
          "ordinal": 3,
          "value": "OBSOLETE",
          "description": "OBSOLETE means that the relationship should not be used anymore."
        },
        {
          "ordinal": 99,
          "value": "OTHER",
          "description": "OTHER means that there is another status."
        }
      ]
    },
    {
      "name": "AtlasGlossaryTermAssignmentStatus",
      "description": "How much the semantic assignment should be trusted.",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "elementDefs":
      [
        {
          "value": "DISCOVERED",
          "ordinal": 0,
          "description": "DISCOVERED means that the semantic assignment was added by a discovery engine."
        },
        {
          "value": "PROPOSED",
          "ordinal": 1,
          "description": "PROPOSED means that the semantic assignment was proposed by person - they may be a subject matter expert, or consumer of the Referenceable asset"
        },
        {
          "value": "IMPORTED",
          "ordinal": 2,
          "description": "IMPORTED means that the semantic assignment has been imported from outside of the open metadata cluster"
        },
        {
          "value": "VALIDATED",
          "ordinal": 3,
          "description": "VALIDATED means that the semantic assignment has been reviewed and is highly trusted."
        },
        {
          "value": "DEPRECATED",
          "ordinal": 4,
          "description": "DEPRECATED means that the semantic assignment is being phased out. There may be another semantic assignment to the Referenceable that will ultimately replace this one."
        },
        {
          "value": "OBSOLETE",
          "ordinal": 5,
          "description": "OBSOLETE means that the semantic assignment is no longer in use,"
        },
        {
          "value": "OTHER",
          "ordinal": 6,
          "description": "OTHER means that the semantic assignment value does not match any of the other Term Assignment Status values"
        }
      ]
    },
    {
      "name": "AtlasGlossaryType",
      "description": "Defines type of the Glossary",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "KNOWLEDGE_HUB",
          "description": "Glossary will be used to store knowledge as documents"
        }
      ]
    },
    {
      "name": "AtlasGlossaryCategoryType",
      "description": "Defines type if the Glossary Category",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "DOCUMENT_FOLDER",
          "description": "Document Folder will contain Documents"
        }
      ]
    },
    {
      "name": "AtlasGlossaryTermType",
      "description": "Defines type if the Glossary Term",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "DOCUMENT",
          "description": "Will represent Document as knowledge hub"
        }
      ]
    },
    {
      "name": "table_type",
      "description": "Type of the table.",
      "typeVersion": "1.0",
      "serviceType": "atlas_core",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "TEMPORARY"
        },
        {
          "ordinal": 1,
          "value": "ICEBERG"
        },
        {
          "ordinal": 2,
          "value": "KUDU"
        }
      ]
    },
    {
      "category": "ENUM",
      "name": "SchemaRegistrySchemaType",
      "description": "The SchemaRegistrySchemaType enum defines the possible values for languages that are supported as schema definition",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "elementDefs":
      [
        {
          "value": "AVRO",
          "ordinal": 0
        },
        {
          "value": "JSON",
          "ordinal": 1
        },
        {
          "value": "PROTOBUF",
          "ordinal": 2
        }
      ]
    },
    {
      "category": "ENUM",
      "name": "query_username_strategy",
      "description": "Defines username used to override while making queries",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "elementDefs":
      [
        {
          "value": "connectionUsername",
          "ordinal": 0
        },
        {
          "value": "atlanUsername",
          "ordinal": 1
        }
      ]
    },
    {
      "name": "FormFieldType",
      "description": "Type of the field in a form.",
      "typeVersion": "1.0",
      "serviceType": "atlas_core",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "INT"
        },
        {
          "ordinal": 1,
          "value": "STRING"
        },
        {
          "ordinal": 2,
          "value": "DATE"
        },
        {
          "ordinal": 3,
          "value": "BOOLEAN"
        },
        {
          "ordinal": 4,
          "value": "LONG"
        },
        {
          "ordinal": 5,
          "value": "JSON"
        }
      ]
    },
    {
      "name": "FormFieldDimension",
      "description": "Type of the field's value in a form.",
      "typeVersion": "1.0",
      "serviceType": "atlas_core",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "SINGLE"
        },
        {
          "ordinal": 1,
          "value": "MULTI"
        }
      ]
    },
    {
      "category": "ENUM",
      "name": "AIDatasetType",
      "description": "Defines the possible types on AI dataset.",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "elementDefs":
      [
        {
          "value": "TRAINING",
          "ordinal": 0
        },
        {
          "value": "TESTING",
          "ordinal": 1
        },
        {
          "value": "INFERENCE",
          "ordinal": 2
        },
        {
          "value": "VALIDATION",
          "ordinal": 3
        },
        {
          "value": "OUTPUT",
          "ordinal": 4
        }
      ]
    },
    {
      "name": "certificate_status",
      "description": "Defines possible certificate statuses.",
      "typeVersion": "1.1",
      "serviceType": "atlas_core",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "DEPRECATED"
        },
        {
          "ordinal": 1,
          "value": "DRAFT"
        },
        {
          "ordinal": 2,
          "value": "VERIFIED"
        }
      ]
    },
    {
      "name": "google_datastudio_asset_type",
      "description": "Defines the types of assets available in Google Data Studio.",
      "typeVersion": "1.0",
      "serviceType": "atlas_core",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "REPORT"
        },
        {
          "ordinal": 1,
          "value": "DATA_SOURCE"
        }
      ]
    },
    {
      "name": "powerbi_endorsement",
      "description": "Defines available endorsement statuses for Power BI assets.",
      "typeVersion": "1.0",
      "serviceType": "atlas_core",
      "category": "ENUM",
      "elementDefs":
      [
        {
          "ordinal": 0,
          "value": "Promoted"
        },
        {
          "ordinal": 1,
          "value": "Certified"
        }
      ]
    },
    {
      "name": "atlas_operation",
      "description": "Defines audit operations in Atlas",
      "typeVersion": "1.0",
      "serviceType": "atlas_core",
      "elementDefs": [
        {
          "ordinal": 0,
          "value": "OTHERS"
        },
        {
          "ordinal": 1,
          "value": "PURGE"
        },
        {
          "ordinal": 2,
          "value": "EXPORT"
        },
        {
          "ordinal": 3,
          "value": "IMPORT"
        },
        {
          "ordinal": 4,
          "value": "IMPORT_DELETE_REPL"
        },
        {
          "ordinal": 5,
          "value": "TYPE_DEF_CREATE"
        },
        {
          "ordinal": 6,
          "value": "TYPE_DEF_UPDATE"
        },
        {
          "ordinal": 7,
          "value": "TYPE_DEF_DELETE"
        },
        {
          "ordinal": 8,
          "value": "SERVER_START"
        },
        {
          "ordinal": 9,
          "value": "SERVER_STATE_ACTIVE"
        }
      ]
    },
    {
      "category": "ENUM",
      "name": "AuthPolicyType",
      "description": "Policy Item type",
      "serviceType": "atlas_core",
      "typeVersion": "1.1",
      "elementDefs":
      [
        {
          "value": "allow",
          "ordinal": 0
        },
        {
          "value": "deny",
          "ordinal": 1
        },
        {
          "value": "allowExceptions",
          "ordinal": 2
        },
        {
          "value": "denyExceptions",
          "ordinal": 3
        },
        {
          "value": "dataMask",
          "ordinal": 4
        },
        {
          "value": "rowFilter",
          "ordinal": 5
        }
      ]
    },
    {
      "category": "ENUM",
      "name": "AuthPolicyCategory",
      "description": "Policy category",
      "serviceType": "atlas_core",
      "typeVersion": "1.1",
      "elementDefs": [
        {
          "value": "bootstrap",
          "ordinal": 0
        },
        {
          "value": "persona",
          "ordinal": 1
        },
        {
          "value": "purpose",
          "ordinal": 2
        }
      ]
    },
    {
      "category": "ENUM",
      "name": "AuthPolicyResourceCategory",
      "description": "Policy resource category",
      "serviceType": "atlas_core",
      "typeVersion": "1.1",
      "elementDefs":
      [
        {
          "value": "ENTITY",
          "ordinal": 0
        },
        {
          "value": "RELATIONSHIP",
          "ordinal": 1
        },
        {
          "value": "TAG",
          "ordinal": 2
        },
        {
          "value": "CUSTOM",
          "ordinal": 3
        },
        {
          "value": "TYPEDEFS",
          "ordinal": 4
        },
        {
          "value": "ADMIN",
          "ordinal": 5
        }
      ]
    }
  ],
  "structDefs":
  [
    {
      "name": "PopularityInsights",
      "description": "Detailed information about an asset's usage or popularity based on aggregated queries.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "recordUser",
          "description": "Username or email of the user who ran the queries.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true
        },
        {
          "name": "recordQuery",
          "description": "Query run at source.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": false
        },
        {
          "name": "recordQueryDuration",
          "description": "Duration for which the query ran at source.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true
        },
        {
          "name": "recordQueryCount",
          "description": "Number of queries run by the user.",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true
        },
        {
          "name": "recordTotalUserCount",
          "description": "Total number of users who ran queries.",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true
        },
        {
          "name": "recordComputeCost",
          "description": "Total compute cost for running all queries.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "recordMaxComputeCost",
          "description": "Maximum compute cost across all query runs.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "recordComputeCostUnit",
          "description": "Unit of measure for recordComputeCost.",
          "typeName": "SourceCostUnitType",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "recordLastTimestamp",
          "typeName": "date",
          "description": "Timestamp of last operation or query run by the user.",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false
        },
        {
          "name": "recordWarehouse",
          "description": "Name of the warehouse on which the queries were run.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": false
        }
      ]
    },
    {
      "name": "StarredDetails",
      "description": "Detailed information about the users who have starred an asset.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "assetStarredBy",
          "description": "Username of the user who starred the asset.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true
        },
        {
          "name": "assetStarredAt",
          "typeName": "date",
          "description": "Time at which the user starred the asset.",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false
        }
      ]
    },
    {
      "name": "Histogram",
      "description": "Detailed information representing a histogram of values.",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "boundaries",
          "description": "Boundaries of the histogram.",
          "typeName": "array<float>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "frequencies",
          "description": "Frequencies of the histogram.",
          "typeName": "array<float>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        }
      ]
    },
    {
      "name": "ColumnValueFrequencyMap",
      "description": "Detailed information representing a column value and it's frequency.",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "columnValue",
          "description": "Sample value for the column.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "columnValueFrequency",
          "description": "Frequency of the sample value in the column.",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "FormField",
      "description": "Structure of a field in a form.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "formFieldId",
          "description": "Unique identifier of the field in a form.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "formFieldName",
          "description": "Name of the field in a form.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "formFieldType",
          "description": "Type of the field in a form.",
          "typeName": "FormFieldType",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "formFieldDimension",
          "description": "Dimension of the field's value in a form.",
          "typeName": "FormFieldDimension",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "formFieldOptions",
          "description": "Options of the field in a form.",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        }
      ]
    },
    {
      "name": "AuthPolicyValiditySchedule",
      "description": "Validity schedule struct for policy",
      "serviceType": "atlan",
      "typeVersion": "1.1",
      "attributeDefs":
      [
        {
          "name": "policyValidityScheduleStartTime",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "policyValidityScheduleEndTime",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "policyValidityScheduleTimezone",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        }
      ]
    },
    {
      "name": "AuthPolicyCondition",
      "description": "Policy condition schedule struct",
      "serviceType": "atlan",
      "typeVersion": "1.1",
      "attributeDefs":
      [
        {
          "name": "policyConditionType",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "policyConditionValues",
          "typeName": "array<string>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        }
      ]
    },
    {
      "name": "SourceTagAttachmentValue",
      "description": "Detailed information about the value of a source tag's attachment to an asset.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs": [
        {
          "name": "tagAttachmentKey",
          "description": "Attachment key, for example: 'has_pii' or 'type_pii'.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "tagAttachmentValue",
          "description": "Attachment value, for example: 'true' or 'email'.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        }
      ]
    },
    {
      "name": "SourceTagAttribute",
      "description": "Detailed information about a source tag's attributes.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs": [
        {
          "name": "tagAttributeKey",
          "description": "Attribute key, for example: 'allowedValues' or 'enabled'.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "tagAttributeValue",
          "description": "Attribute value, for example: '[\"Private\", \"PII\"]' for allowedValues key or 'true' for enabled key.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "tagAttributeProperties",
          "description": "Properties of the attribute.",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        }
      ]
    },
    {
      "name": "SourceTagAttachment",
      "description": "Detailed information about the attachment of a tag to an Atlan asset, synced from source.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs": [
        {
          "name": "sourceTagName",
          "description": "Simple name of the source tag.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "indexTypeESConfig": {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields": {
            "keyword": {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "sourceTagQualifiedName",
          "description": "Unique name of the source tag, in Atlan.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "sourceTagGuid",
          "description": "Unique identifier (GUID) of the source tag, in Atlan.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "sourceTagConnectorName",
          "description": "Connector that is the source of the tag.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "sourceTagValue",
          "description": "Value of the tag attachment, from the source.",
          "typeName": "array<SourceTagAttachmentValue>",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "isSourceTagSynced",
          "description": "Whether the tag attachment has been synced at the source (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "sourceTagSyncTimestamp",
          "description": "Time (epoch) when the tag attachment was synced at the source, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "indexTypeESFields": {
            "date": {
              "type": "date",
              "format": "epoch_millis"
            }
          }
        },
        {
          "name": "sourceTagSyncError",
          "description": "Error message if the tag attachment sync at the source failed.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "sourceTagType",
          "description": "Specifies the source tag type.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false
        }
      ]
    }
  ],
  "entityDefs":
  [
    {
      "name": "__internal",
      "superTypes": [],
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "attributeDefs": []
    },
    {
      "name": "AtlasServer",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "superTypes": [
      ],
      "attributeDefs": [
        {
          "name": "AtlasServer.name",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "AtlasServer.displayName",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "fullName",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": true
        },
        {
          "name": "urls",
          "typeName": "array<string>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "additionalInfo",
          "typeName": "map<string,string>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "__AtlasUserProfile",
      "superTypes": [
        "__internal"
      ],
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "attributeDefs": [
        {
          "name": "__AtlasUserProfile.name",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": true
        },
        {
          "name": "fullName",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "savedSearches",
          "typeName": "array<__AtlasUserSavedSearch>",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "constraints": [
            {
              "type": "ownedRef"
            }
          ]
        }
      ]
    },
    {
      "name": "__AtlasUserSavedSearch",
      "superTypes": [
        "__internal"
      ],
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "attributeDefs": [
        {
          "name": "__AtlasUserSavedSearch.name",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "ownerName",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "searchType",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "uniqueName",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": true
        },
        {
          "name": "searchParameters",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "uiParameters",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "__ExportImportAuditEntry",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "superTypes": [
        "__internal"
      ],
      "attributeDefs": [
        {
          "name": "userName",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "operation",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "sourceServerName",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "targetServerName",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "operationParams",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "operationStartTime",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "operationEndTime",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "resultSummary",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "__AtlasAuditEntry",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "superTypes": [
        "__internal"
      ],
      "attributeDefs": [
        {
          "name": "userName",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "operation",
          "typeName": "atlas_operation",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "startTime",
          "typeName": "date",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": false
        },
        {
          "name": "endTime",
          "typeName": "date",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "clientId",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "params",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "result",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "resultCount",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "Referenceable",
      "description": "Base class for everything in Atlan that can be referenced by qualifiedName.",
      "superTypes":
      [],
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "qualifiedName",
          "description": "Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type.",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": true,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "replicatedFrom",
          "description": "Unused. List of servers where this entity is replicated from.",
          "typeName": "array<AtlasServer>",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "options":
          {
            "isSoftReference": "true"
          }
        },
        {
          "name": "replicatedTo",
          "description": "Unused. List of servers where this entity is replicated to.",
          "typeName": "array<AtlasServer>",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "options":
          {
            "isSoftReference": "true"
          }
        }
      ]
    },
    {
      "name": "Asset",
      "description": "Base class for all assets.",
      "superTypes":
      [
        "Referenceable"
      ],
      "serviceType": "atlas_core",
      "typeVersion": "1.4",
      "attributeDefs":
      [
        {
          "name": "name",
          "description": "Name of this asset. Fallback for display purposes, if displayName is empty.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": false,
          "isUnique": false,
          "searchWeight": 10,
          "skipScrubbing": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            },
            "stemmed":
            {
              "type": "text",
              "analyzer": "atlan_text_stemmer"
            }
          }
        },
        {
          "name": "displayName",
          "description": "Human-readable name of this asset used for display purposes (in user interface).",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false,
          "searchWeight": 10,
          "skipScrubbing": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword"
            }
          }
        },
        {
          "name": "description",
          "description": "Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "searchWeight": 9,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "userDescription",
          "description": "Description of this asset, as provided by a user. If present, this will be used for the description in user interface.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false,
          "searchWeight": 9,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "tenantId",
          "description": "Name of the Atlan workspace in which this asset exists.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true
        },
        {
          "name": "certificateStatus",
          "description": "Status of this asset's certification.",
          "typeName": "certificate_status",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "skipScrubbing": true,
          "includeInNotification": true,
          "autoUpdateAttributes":
          {
            "user":
            [
              "certificateUpdatedBy"
            ],
            "timestamp":
            [
              "certificateUpdatedAt"
            ]
          },
          "indexTypeESConfig":
          {
            "normalizer": "atlan_normalizer"
          },
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text"
            }
          }
        },
        {
          "name": "certificateStatusMessage",
          "description": "Human-readable descriptive message used to provide further detail to certificateStatus.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "autoUpdateAttributes":
          {
            "user":
            [
              "certificateUpdatedBy"
            ],
            "timestamp":
            [
              "certificateUpdatedAt"
            ]
          }
        },
        {
          "name": "certificateUpdatedBy",
          "description": "Name of the user who last updated the certification of this asset.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "certificateUpdatedAt",
          "description": "Time (epoch) at which the certification was last updated, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "date":
            {
              "type": "date",
              "format": "epoch_millis"
            }
          }
        },
        {
          "name": "announcementTitle",
          "description": "Brief title for the announcement on this asset. Required when announcementType is specified.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "autoUpdateAttributes":
          {
            "user":
            [
              "announcementUpdatedBy"
            ],
            "timestamp":
            [
              "announcementUpdatedAt"
            ]
          }
        },
        {
          "name": "announcementMessage",
          "description": "Detailed message to include in the announcement on this asset.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "autoUpdateAttributes":
          {
            "user":
            [
              "announcementUpdatedBy"
            ],
            "timestamp":
            [
              "announcementUpdatedAt"
            ]
          }
        },
        {
          "name": "announcementType",
          "description": "Type of announcement on this asset.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "autoUpdateAttributes":
          {
            "user":
            [
              "announcementUpdatedBy"
            ],
            "timestamp":
            [
              "announcementUpdatedAt"
            ]
          }
        },
        {
          "name": "announcementUpdatedAt",
          "description": "Time (epoch) at which the announcement was last updated, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "date":
            {
              "type": "date",
              "format": "epoch_millis"
            }
          }
        },
        {
          "name": "announcementUpdatedBy",
          "description": "Name of the user who last updated the announcement.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "ownerUsers",
          "description": "List of users who own this asset.",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "ownerGroups",
          "description": "List of groups who own this asset.",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "adminUsers",
          "description": "List of users who administer this asset. (This is only used for certain asset types.)",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "adminGroups",
          "description": "List of groups who administer this asset. (This is only used for certain asset types.)",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "viewerUsers",
          "description": "List of users who can view assets contained in a collection. (This is only used for certain asset types.)",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "viewerGroups",
          "description": "List of groups who can view assets contained in a collection. (This is only used for certain asset types.)",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "connectorName",
          "description": "Type of the connector through which this asset is accessible.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "connectionName",
          "description": "Simple name of the connection through which this asset is accessible.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text"
            }
          }
        },
        {
          "name": "connectionQualifiedName",
          "description": "Unique name of the connection through which this asset is accessible.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "__hasLineage",
          "description": "Whether this asset has lineage (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": false,
          "skipScrubbing": true,
          "defaultValue": false
        },
        {
          "name": "isDiscoverable",
          "description": "Whether this asset is discoverable through the UI (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isEditable",
          "description": "Whether this asset can be edited in the UI (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "subType",
          "description": "Subtype of this asset.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "viewScore",
          "description": "View score for this asset.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "defaultValue": 1.17549435E-38,
          "includeInNotification": false,
          "indexTypeESFields":
          {
            "rank_feature":
            {
              "type": "rank_feature"
            }
          }
        },
        {
          "name": "popularityScore",
          "description": "Popularity score for this asset.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "defaultValue": 1.17549435E-38,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "rank_feature":
            {
              "type": "rank_feature"
            }
          }
        },
        {
          "name": "sourceOwners",
          "description": "List of owners of this asset, in the source system.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sourceCreatedBy",
          "description": "Name of the user who created this asset, in the source system.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sourceCreatedAt",
          "description": "Time (epoch) at which this asset was created in the source system, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "date":
            {
              "type": "date",
              "format": "epoch_millis"
            }
          }
        },
        {
          "name": "sourceUpdatedAt",
          "description": "Time (epoch) at which this asset was last updated in the source system, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "date":
            {
              "type": "date",
              "format": "epoch_millis"
            }
          }
        },
        {
          "name": "sourceUpdatedBy",
          "description": "Name of the user who last updated this asset, in the source system.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sourceURL",
          "description": "URL to the resource within the source application, used to create a button to view this asset in the source application.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sourceEmbedURL",
          "description": "URL to create an embed for a resource (for example, an image of a dashboard) within Atlan.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "lastSyncWorkflowName",
          "description": "Name of the crawler that last synchronized this asset.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "lastSyncRunAt",
          "description": "Time (epoch) at which this asset was last crawled, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "lastSyncRun",
          "description": "Name of the last run of the crawler that last synchronized this asset.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "adminRoles",
          "description": "List of roles who administer this asset. (This is only used for Connection assets.)",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sourceReadCount",
          "description": "Total count of all read operations at source.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceReadUserCount",
          "description": "Total number of unique users that read data from asset.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceLastReadAt",
          "description": "Timestamp of most recent read operation.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false,
          "indexTypeESFields":
          {
            "date":
            {
              "type": "date",
              "format": "epoch_millis"
            }
          }
        },
        {
          "name": "lastRowChangedAt",
          "description": "Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false,
          "indexTypeESFields":
          {
            "date":
            {
              "type": "date",
              "format": "epoch_millis"
            }
          }
        },
        {
          "name": "sourceTotalCost",
          "description": "Total cost of all operations at source.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceCostUnit",
          "description": "The unit of measure for sourceTotalCost.",
          "typeName": "SourceCostUnitType",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "sourceReadQueryCost",
          "description": "Total cost of read queries at source.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceReadRecentUserList",
          "description": "List of usernames of the most recent users who read this asset.",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceReadRecentUserRecordList",
          "description": "List of usernames with extra insights for the most recent users who read this asset.",
          "typeName": "array<PopularityInsights>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceReadTopUserList",
          "description": "List of usernames of the users who read this asset the most.",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceReadTopUserRecordList",
          "description": "List of usernames with extra insights for the users who read this asset the most.",
          "typeName": "array<PopularityInsights>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceReadPopularQueryRecordList",
          "description": "List of the most popular queries that accessed this asset.",
          "typeName": "array<PopularityInsights>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceReadExpensiveQueryRecordList",
          "description": "List of the most expensive queries that accessed this asset.",
          "typeName": "array<PopularityInsights>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceReadSlowQueryRecordList",
          "description": "List of the slowest queries that accessed this asset.",
          "typeName": "array<PopularityInsights>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceQueryComputeCostList",
          "description": "List of most expensive warehouse names.",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "sourceQueryComputeCostRecordList",
          "description": "List of most expensive warehouses with extra insights.",
          "typeName": "array<PopularityInsights>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "dbtQualifiedName",
          "description": "Unique name of this asset in dbt.",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "assetDbtWorkflowLastUpdated",
          "description": "Name of the DBT workflow in Atlan that last updated the asset.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtAlias",
          "description": "Alias of this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "assetDbtMeta",
          "description": "Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "assetDbtUniqueId",
          "description": "Unique identifier of this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "assetDbtAccountName",
          "description": "Name of the account in which this asset exists in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "assetDbtProjectName",
          "description": "Name of the project in which this asset exists in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "assetDbtPackageName",
          "description": "Name of the package in which this asset exists in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "assetDbtJobName",
          "description": "Name of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "assetDbtJobSchedule",
          "description": "Schedule of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobStatus",
          "description": "Status of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtTestStatus",
          "description": "All associated dbt test statuses.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtJobScheduleCronHumanized",
          "description": "Human-readable cron schedule of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          }
        },
        {
          "name": "assetDbtJobLastRun",
          "description": "Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunUrl",
          "description": "URL of the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtJobLastRunCreatedAt",
          "description": "Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunUpdatedAt",
          "description": "Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunDequedAt",
          "description": "Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunStartedAt",
          "description": "Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunTotalDuration",
          "description": "Total duration of the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunTotalDurationHumanized",
          "description": "Human-readable total duration of the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunQueuedDuration",
          "description": "Total duration the job that materialized this asset in dbt spent being queued.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunQueuedDurationHumanized",
          "description": "Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtJobLastRunRunDuration",
          "description": "Run duration of the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunRunDurationHumanized",
          "description": "Human-readable run duration of the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtJobLastRunGitBranch",
          "description": "Branch in git from which the last run of the job that materialized this asset in dbt ran.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING",
          "indexTypeESFields":
          {
            "text":
            {
              "analyzer": "atlan_text_analyzer",
              "type": "text"
            }
          }
        },
        {
          "name": "assetDbtJobLastRunGitSha",
          "description": "SHA hash in git for the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtJobLastRunStatusMessage",
          "description": "Status message of the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "assetDbtJobLastRunOwnerThreadId",
          "description": "Thread ID of the owner of the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtJobLastRunExecutedByThreadId",
          "description": "Thread ID of the user who executed the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtJobLastRunArtifactsSaved",
          "description": "Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunArtifactS3Path",
          "description": "Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtJobLastRunHasDocsGenerated",
          "description": "Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunHasSourcesGenerated",
          "description": "Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobLastRunNotificationsSent",
          "description": "Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobNextRun",
          "description": "Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "assetDbtJobNextRunHumanized",
          "description": "Human-readable time when the next run of the job that materializes this asset in dbt is scheduled.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "assetDbtEnvironmentName",
          "description": "Name of the environment in which this asset is materialized in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "assetDbtEnvironmentDbtVersion",
          "description": "Version of the environment in which this asset is materialized in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtTags",
          "description": "List of tags attached to this asset in dbt.",
          "typeName": "array<string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING",
          "indexTypeESFields":
          {
            "text":
            {
              "analyzer": "atlan_text_analyzer",
              "type": "text"
            }
          }
        },
        {
          "name": "assetDbtSemanticLayerProxyUrl",
          "description": "URL of the semantic layer proxy for this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetDbtSourceFreshnessCriteria",
          "description": "Freshness criteria for the source of this asset in dbt.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "sampleDataUrl",
          "description": "URL for sample data for this asset.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "assetTags",
          "description": "List of tags attached to this asset.",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "analyzer": "atlan_text_analyzer",
              "type": "text"
            }
          }
        },
        {
          "name": "assetMcIncidentNames",
          "description": "List of Monte Carlo incident names attached to this asset.",
          "typeName": "array<string>",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword"
            }
          }
        },
        {
          "name": "assetMcIncidentQualifiedNames",
          "description": "List of unique Monte Carlo incident names attached to this asset.",
          "typeName": "array<string>",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING",
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "assetMcAlertQualifiedNames",
          "description": "List of unique Monte Carlo alert names attached to this asset.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING",
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "assetMcMonitorNames",
          "description": "List of Monte Carlo monitor names attached to this asset.",
          "typeName": "array<string>",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword"
            }
          }
        },
        {
          "name": "assetMcMonitorQualifiedNames",
          "description": "List of unique Monte Carlo monitor names attached to this asset.",
          "typeName": "array<string>",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING",
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "assetMcMonitorStatuses",
          "description": "Statuses of all associated Monte Carlo monitors.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetMcMonitorTypes",
          "description": "Types of all associated Monte Carlo monitors.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetMcMonitorScheduleTypes",
          "description": "Schedules of all associated Monte Carlo monitors.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetMcIncidentTypes",
          "description": "List of Monte Carlo incident types associated with this asset.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetMcIncidentSubTypes",
          "description": "List of Monte Carlo incident sub-types associated with this asset.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetMcIncidentSeverities",
          "description": "List of Monte Carlo incident severities associated with this asset.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetMcIncidentPriorities",
          "description": "List of Monte Carlo incident priorities associated with this asset.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetMcIncidentStates",
          "description": "List of Monte Carlo incident states associated with this asset.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetMcIsMonitored",
          "description": "Tracks whether this asset is monitored by MC or not",
          "typeName": "boolean",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetMcLastSyncRunAt",
          "description": "Time (epoch) at which this asset was last synced from Monte Carlo.",
          "typeName": "date",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "starredBy",
          "description": "Users who have starred this asset.",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "starredDetailsList",
          "description": "List of usernames with extra information of the users who have starred an asset.",
          "typeName": "array<StarredDetails>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "starredCount",
          "description": "Number of users who have starred this asset.",
          "typeName": "int",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetAnomaloDQStatus",
          "description": "Status of data quality from Anomalo.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetAnomaloCheckCount",
          "description": "Total number of checks present in Anomalo for this asset.",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetAnomaloFailedCheckCount",
          "description": "Total number of checks failed in Anomalo for this asset.",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetAnomaloCheckStatuses",
          "description": "Stringified JSON object containing status of all Anomalo checks associated to this asset.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetAnomaloLastCheckRunAt",
          "description": "Time (epoch) at which the last check was run via Anomalo.",
          "typeName": "date",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetAnomaloAppliedCheckTypes",
          "description": "All associated Anomalo check types.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetAnomaloFailedCheckTypes",
          "description": "All associated Anomalo failed check types.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetAnomaloSourceUrl",
          "description": "URL of the source in Anomalo.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetSodaDQStatus",
          "description": "Status of data quality from Soda.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetSodaCheckCount",
          "description": "Number of checks done via Soda.",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetSodaLastSyncRunAt",
          "description": "",
          "typeName": "date",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetSodaLastScanAt",
          "description": "",
          "typeName": "date",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetSodaCheckStatuses",
          "description": "All associated Soda check statuses.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetSodaSourceURL",
          "description": "",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "assetIcon",
          "description": "Name of the icon to use for this asset. (Only applies to glossaries, currently.)",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "isPartial",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "defaultValue": false,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "isAIGenerated",
          "description": "",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "defaultValue": false,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "assetCoverImage",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "assetThemeHex",
          "description": "Color (in hexadecimal RGB) to use to represent this asset.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "lexicographicalSortOrder",
          "description": "Custom order for sorting purpose, managed by client",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "indexType": "STRING",
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "hasContract",
          "description": "Whether this asset has contract (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "defaultValue": false
        },
        {
          "name": "assetRedirectGUIDs",
          "description": "Array of asset ids that equivalent to this asset.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "indexType": "STRING",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "assetPolicyGUIDs",
          "description": "Array of policy ids governing this asset",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "assetPoliciesCount",
          "description": "Count of policies inside the asset",
          "typeName": "long",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "domainGUIDs",
          "description": "Array of domain guids linked to this asset",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "nonCompliantAssetPolicyGUIDs",
          "description": "Array of policy ids non-compliant to this asset",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "productGUIDs",
          "description": "Array of product guids linked to this asset",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "outputProductGUIDs",
          "description": "Array of product guids which have this asset as outputPort",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "applicationQualifiedName",
          "description": "Qualified name of the Application that contains this asset.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexType": "STRING"
        },
        {
          "name": "applicationFieldQualifiedName",
          "description": "Qualified name of the ApplicationField that contains this asset.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexType": "STRING"
        }
      ]
    },
    {
      "name": "AtlasGlossary",
      "description": "Instance of a glossary in Atlan.",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlas_core",
      "typeVersion": "1.2",
      "attributeDefs":
      [
        {
          "name": "shortDescription",
          "description": "Unused. A short definition of the glossary. See 'description' and 'userDescription' instead.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "longDescription",
          "description": "Unused. A longer description of the glossary. See 'readme' instead.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "language",
          "description": "Unused. Language of the glossary's contents.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "usage",
          "description": "Unused. Inteded usage for the glossary.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "additionalAttributes",
          "description": "Unused. Arbitrary set of additional attributes associated with this glossary.",
          "typeName": "map<string,string>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "glossaryType",
          "typeName": "AtlasGlossaryType",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "AtlasGlossaryCategory",
      "description": "Instance of a category in Atlan, an organizational construct for glossary terms.",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlas_core",
      "typeVersion": "1.2",
      "attributeDefs":
      [
        {
          "name": "shortDescription",
          "description": "Unused. Brief summary of the category. See 'description' and 'userDescription' instead.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "longDescription",
          "description": "Unused. Detailed description of the category. See 'readme' instead.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "additionalAttributes",
          "description": "Unused. Arbitrary set of additional attributes associated with the category.",
          "typeName": "map<string,string>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "categoryType",
          "typeName": "AtlasGlossaryCategoryType",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "AtlasGlossaryTerm",
      "description": "Instance of a term in Atlan. Terms define concepts in natural language that can be associated with other assets to provide meaning.",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlas_core",
      "typeVersion": "1.2",
      "attributeDefs":
      [
        {
          "name": "shortDescription",
          "description": "Unused. Brief summary of the term. See 'description' and 'userDescription' instead.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "longDescription",
          "description": "Unused. Detailed definition of the term. See 'readme' instead.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "examples",
          "description": "Unused. Exmaples of the term.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "abbreviation",
          "description": "Unused. Abbreviation of the term.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "usage",
          "description": "Unused. Intended usage for the term.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "additionalAttributes",
          "description": "Unused. Arbitrary set of additional attributes for the terrm.",
          "typeName": "map<string,string>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "termType",
          "typeName": "AtlasGlossaryTermType",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "Catalog",
      "description": "Base class for catalog assets. Catalog assets include any asset that can participate in lineage.",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlan",
      "typeVersion": "1.1",
      "attributeDefs":
      []
    },
    {
      "superTypes":
      [
        "Catalog"
      ],
      "name": "EventStore",
      "description": "Base class for event store assets.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      []
    },
    {
      "superTypes":
      [
        "Catalog"
      ],
      "name": "Insight",
      "description": "Base class for Insights assets in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      []
    },
    {
      "name": "DataMesh",
      "description": "Base class for data mesh assets.",
      "superTypes":
      [
        "Catalog"
      ],
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "parentDomainQualifiedName",
          "description": "Unique name of the parent domain in which this asset exists.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "superDomainQualifiedName",
          "description": "Unique name of the top-level domain in which this asset exists.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        }
      ]
    },
    {
      "name": "Model",
      "category": "ENTITY",
      "description": "Assets used to model data and information.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "modelName",
          "description": "Simple name of the model in which this asset exists, or empty if it is itself a data model.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "modelQualifiedName",
          "description": "Unique name of the model in which this asset exists, or empty if it is itself a data model.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexType": "STRING"
        },
        {
          "name": "modelDomain",
          "description": "Model domain in which this asset exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "modelNamespace",
          "description": "Model namespace in which this asset exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "modelVersionName",
          "description": "Simple name of the version in which this asset exists, or empty if it is itself a data model version.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "modelVersionAgnosticQualifiedName",
          "description": "Unique name of the parent in which this asset exists, irrespective of the version (always implies the latest version).",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexType": "STRING"
        },
        {
          "name": "modelVersionQualifiedName",
          "description": "Unique name of the version in which this asset exists, or empty if it is itself a data model version.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexType": "STRING"
        },
        {
          "name": "modelEntityName",
          "description": "Simple name of the entity in which this asset exists, or empty if it is itself a data model entity.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "modelEntityQualifiedName",
          "description": "Unique name of the entity in which this asset exists, or empty if it is itself a data model entity.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexType": "STRING"
        },
        {
          "name": "modelType",
          "description": "Type of the model asset (conceptual, logical, physical).",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true,
          "indexType": "STRING"
        },
        {
          "name": "modelSystemDate",
          "description": "System date for the asset.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "modelBusinessDate",
          "description": "Business date for the asset.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "modelExpiredAtSystemDate",
          "description": "System expiration date for the asset.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        },
        {
          "name": "modelExpiredAtBusinessDate",
          "description": "Business expiration date for the asset.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": true
        }
      ],
      "superTypes":
      [
        "Catalog"
      ]
    },
    {
      "superTypes":
      [
        "Catalog"
      ],
      "name": "Resource",
      "description": "Base class for resources.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "link",
          "description": "URL to the resource.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isGlobal",
          "description": "Whether the resource is global (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "reference",
          "description": "Reference to the resource.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "resourceMetadata",
          "description": "Metadata of the resource.",
          "typeName": "map<string,string>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        }
      ]
    },
    {
      "superTypes":
      [
        "Catalog"
      ],
      "name": "SQL",
      "description": "Base class for SQL assets.",
      "typeVersion": "1.1",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "queryCount",
          "description": "Number of times this asset has been queried.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryUserCount",
          "description": "Number of unique users who have queried this asset.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryUserMap",
          "description": "Map of unique users who have queried this asset to the number of times they have queried it.",
          "typeName": "map<string,long>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryCountUpdatedAt",
          "description": "Time (epoch) at which the query count was last updated, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": false
        },
        {
          "name": "databaseName",
          "description": "Simple name of the database in which this SQL asset exists, or empty if it does not exist within a database.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "databaseQualifiedName",
          "description": "Unique name of the database in which this SQL asset exists, or empty if it does not exist within a database.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "schemaName",
          "description": "Simple name of the schema in which this SQL asset exists, or empty if it does not exist within a schema.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "schemaQualifiedName",
          "description": "Unique name of the schema in which this SQL asset exists, or empty if it does not exist within a schema.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "tableName",
          "description": "Simple name of the table in which this SQL asset exists, or empty if it does not exist within a table.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "tableQualifiedName",
          "description": "Unique name of the table in which this SQL asset exists, or empty if it does not exist within a table.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "indexType": "STRING",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "viewName",
          "description": "Simple name of the view in which this SQL asset exists, or empty if it does not exist within a view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "viewQualifiedName",
          "description": "Unique name of the view in which this SQL asset exists, or empty if it does not exist within a view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "indexType": "STRING",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "calculationViewName",
          "description": "Simple name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "calculationViewQualifiedName",
          "description": "Unique name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "indexType": "STRING",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "isProfiled",
          "description": "Whether this asset has been profiled (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "lastProfiledAt",
          "description": "Time (epoch) at which this asset was last profiled, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "date":
            {
              "type": "date",
              "format": "epoch_millis"
            }
          }
        }
      ]
    },
    {
      "superTypes":
      [
        "SQL"
      ],
      "name": "CalculationView",
      "description": "Instance of a calculation view in Atlan.",
      "typeVersion": "1.1",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "columnCount",
          "description": "Number of columns in this calculation view.",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "calculationViewVersionId",
          "description": "The version ID of this calculation view.",
          "typeName": "long",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "calculationViewActivatedBy",
          "description": "The owner who activated the calculation view",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        },
        {
          "name": "calculationViewActivatedAt",
          "description": "Time at which this calculation view was activated at",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isIndexable": false,
          "isUnique": false,
          "includeInNotification": true
        },
        {
          "name": "calculationViewPackageId",
          "description": "The full package id path to which a calculation view belongs/resides in the repository.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isOptional": true,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexType": "STRING"
        }
      ]
    },
    {
      "superTypes":
      [
        "SQL"
      ],
      "name": "Column",
      "description": "Instance of a column in Atlan.",
      "typeVersion": "1.4",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "dataType",
          "description": "Data type of values in this column.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "indexType": "STRING",
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "normalizer": "atlan_normalizer"
          },
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "subDataType",
          "description": "Sub-data type of this column.",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "columnCompression",
          "description": "Compression type of this column.",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnEncoding",
          "description": "Encoding type of this column.",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "rawDataTypeDefinition",
          "description": "",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "order",
          "description": "Order (position) in which this column appears in the table (starting at 1).",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "nestedColumnOrder",
          "description": "Order (position) in which this column appears in the nested Column (nest level starts at 1).",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "nestedColumnCount",
          "description": "Number of columns nested within this (STRUCT or NESTED) column.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnHierarchy",
          "description": "List of top-level upstream nested columns.",
          "typeName": "array<map<string,string>>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "isPartition",
          "description": "Whether this column is a partition column (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "partitionOrder",
          "description": "Order (position) of this partition column in the table.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isClustered",
          "description": "Whether this column is a clustered column (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isPrimary",
          "description": "When true, this column is the primary key for the table.",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isForeign",
          "description": "When true, this column is a foreign key to another table. NOTE: this must be true when using the foreignKeyTo relationship to specify columns that refer to this column as a foreign key.",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isIndexed",
          "description": "When true, this column is indexed in the database.",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isSort",
          "description": "Whether this column is a sort column (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isDist",
          "description": "Whether this column is a distribution column (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isPinned",
          "description": "Whether this column is pinned (true) or not (false).",
          "typeName": "boolean",
          "defaultValue": false,
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true,
          "autoUpdateAttributes":
          {
            "user":
            [
              "pinnedBy"
            ],
            "timestamp":
            [
              "pinnedAt"
            ]
          }
        },
        {
          "name": "pinnedBy",
          "description": "User who pinned this column.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "indexType": "STRING",
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "pinnedAt",
          "description": "Time (epoch) at which this column was pinned, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "precision",
          "typeName": "int",
          "description": "Total number of digits allowed, when the dataType is numeric.",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "defaultValue",
          "description": "Default value for this column.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "isNullable",
          "description": "When true, the values in this column can be null.",
          "typeName": "boolean",
          "defaultValue": true,
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "numericScale",
          "description": "Number of digits allowed to the right of the decimal point.",
          "typeName": "float",
          "cardinality": "SINGLE",
          "isUnique": false,
          "isOptional": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "maxLength",
          "description": "Maximum length of a value in this column.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "validations",
          "description": "Validations for this column.",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "parentColumnQualifiedName",
          "description": "Unique name of the column this column is nested within, for STRUCT and NESTED columns.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "indexType": "STRING",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "parentColumnName",
          "description": "Simple name of the column this column is nested within, for STRUCT and NESTED columns.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword",
              "normalizer": "atlan_normalizer"
            }
          }
        },
        {
          "name": "columnDistinctValuesCount",
          "description": "Number of rows that contain distinct values.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnDistinctValuesCountLong",
          "description": "Number of rows that contain distinct values.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnHistogram",
          "description": "List of values in a histogram that represents the contents of this column.",
          "typeName": "Histogram",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMax",
          "description": "Greatest value in a numeric column.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMin",
          "description": "Least value in a numeric column.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMean",
          "description": "Arithmetic mean of the values in a numeric column.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnSum",
          "description": "Calculated sum of the values in a numeric column.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMedian",
          "description": "Calculated median of the values in a numeric column.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnStandardDeviation",
          "description": "Calculated standard deviation of the values in a numeric column.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnUniqueValuesCount",
          "description": "Number of rows in which a value in this column appears only once.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnUniqueValuesCountLong",
          "description": "Number of rows in which a value in this column appears only once.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnAverage",
          "description": "Average value in this column.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnAverageLength",
          "description": "Average length of values in a string column.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnDuplicateValuesCount",
          "description": "Number of rows that contain duplicate values.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnDuplicateValuesCountLong",
          "description": "Number of rows that contain duplicate values.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMaximumStringLength",
          "description": "Length of the longest value in a string column.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMaxs",
          "description": "List of the greatest values in a column.",
          "typeName": "array<string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMinimumStringLength",
          "description": "Length of the shortest value in a string column.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMins",
          "description": "List of the least values in a column.",
          "typeName": "array<string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMissingValuesCount",
          "description": "Number of rows in a column that do not contain content.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMissingValuesCountLong",
          "description": "Number of rows in a column that do not contain content.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMissingValuesPercentage",
          "description": "Percentage of rows in a column that do not contain content.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnUniquenessPercentage",
          "description": "Ratio indicating how unique data in this column is: 0 indicates that all values are the same, 100 indicates that all values in this column are unique.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnVariance",
          "description": "Calculated variance of the values in a numeric column.",
          "typeName": "float",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnTopValues",
          "description": "List of top values in this column.",
          "typeName": "array<ColumnValueFrequencyMap>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnDepthLevel",
          "typeName": "int",
          "description": "Level of nesting of this column, used for STRUCT and NESTED columns.",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "nosqlCollectionName",
          "description": "Simple name of the cosmos/mongo collection in which this SQL asset (column) exists, or empty if it does not exist within a cosmos/mongo collection.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "atlan_text_analyzer"
          },
          "indexTypeESFields":
          {
            "keyword":
            {
              "type": "keyword"
            }
          }
        },
        {
          "name": "nosqlCollectionQualifiedName",
          "description": "Unique name of the cosmos/mongo collection in which this SQL asset (column) exists, or empty if it does not exist within a cosmos/mongo collection.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "indexType": "STRING",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnIsMeasure",
          "description": "When true, this column is of type measure/calculated.",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "columnMeasureType",
          "description": "The type of measure/calculated column this is, eg: base, calcaluted, derived.",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes":
      [
        "SQL"
      ],
      "name": "Database",
      "description": "Instance of a (relational) database in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "schemaCount",
          "description": "Number of schemas in this database.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes":
      [
        "SQL"
      ],
      "name": "Function",
      "description": "Instance of a function in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "functionDefinition",
          "description": "Code or set of statements that determine the output of the function.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "functionReturnType",
          "description": "Data type of the value returned by the function.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "indexType": "STRING",
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "functionArguments",
          "description": "Arguments that are passed in to the function.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "functionLanguage",
          "description": "Programming language in which the function is written.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "indexType": "STRING",
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "functionType",
          "description": "Type of function.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "indexType": "STRING",
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "functionIsExternal",
          "description": "Whether the function is stored or executed externally (true) or internally (false).",
          "typeName": "boolean",
          "defaultValue": false,
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "functionIsDMF",
          "description": "Whether the function is a data metric function.",
          "typeName": "boolean",
          "defaultValue": false,
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "functionIsSecure",
          "description": "Whether sensitive information of the function is omitted for unauthorized users (true) or not (false).",
          "typeName": "boolean",
          "defaultValue": false,
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "functionIsMemoizable",
          "description": "Whether the function must re-compute if there are no underlying changes in the values (false) or not (true).",
          "typeName": "boolean",
          "defaultValue": false,
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes":
      [
        "SQL"
      ],
      "name": "MaterialisedView",
      "description": "Instance of a materialized view in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "refreshMode",
          "description": "Refresh mode for this materialized view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "indexType": "STRING",
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "refreshMethod",
          "description": "Refresh method for this materialized view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "staleness",
          "description": "Staleness of this materialized view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "staleSinceDate",
          "description": "Time (epoch) from which this materialized view is stale, in milliseconds.",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "columnCount",
          "description": "Number of columns in this materialized view.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "rowCount",
          "description": "Number of rows in this materialized view.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sizeBytes",
          "description": "Size of this materialized view, in bytes.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isQueryPreview",
          "description": "Whether it's possible to run a preview query on this materialized view (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryPreviewConfig",
          "description": "Configuration for the query preview of this materialized view.",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "alias",
          "description": "Alias for this materialized view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isTemporary",
          "description": "Whether this materialized view is temporary (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "definition",
          "description": "SQL definition of this materialized view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes":
      [
        "SQL"
      ],
      "name": "Procedure",
      "description": "Instance of a stored procedure (routine) in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "definition",
          "description": "SQL definition of the procedure.",
          "typeName": "string",
          "isOptional": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 1,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "name": "Query",
      "superTypes":
      [
        "SQL"
      ],
      "description": "Instance of a query in Atlan.",
      "typeVersion": "1.2",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "rawQuery",
          "description": "Deprecated. See 'longRawQuery' instead.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "longRawQuery",
          "description": "Raw SQL query string.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "rawQueryText",
          "description": "",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "indexTypeESConfig":
          {
            "analyzer": "truncate_analyzer"
          }
        },
        {
          "name": "defaultSchemaQualifiedName",
          "description": "Unique name of the default schema to use for this query.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "defaultDatabaseQualifiedName",
          "description": "Unique name of the default database to use for this query.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "variablesSchemaBase64",
          "description": "Base64-encoded string of the variables to use in this query.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "isPrivate",
          "description": "Whether this query is private (true) or shared (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isSqlSnippet",
          "description": "Whether this query is a SQL snippet (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "parentQualifiedName",
          "description": "Unique name of the parent collection or folder in which this query exists.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 1,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "collectionQualifiedName",
          "description": "Unique name of the collection in which this query exists.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 1,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "isVisualQuery",
          "description": "Whether this query is a visual query (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "visualBuilderSchemaBase64",
          "description": "Base64-encoded string for the visual query builder.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes":
      [
        "SQL"
      ],
      "name": "Schema",
      "description": "Instance of a database schema in Atlan.",
      "typeVersion": "1.1",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "tableCount",
          "description": "Number of tables in this schema.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "schemaExternalLocation",
          "description": "External location of this schema, for example: an S3 object location.",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "viewsCount",
          "description": "Number of views in this schema.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "linkedSchemaQualifiedName",
          "description": "Unique name of the Linked Schema on which this Schema is dependent. This concept is mostly applicable for linked datasets/datasource in Google BigQuery via Analytics Hub Listing",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes":
      [
        "SQL"
      ],
      "name": "Table",
      "description": "Instance of a database table in Atlan.",
      "typeVersion": "1.1",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "columnCount",
          "description": "Number of columns in this table.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "rowCount",
          "description": "Number of rows in this table.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sizeBytes",
          "description": "Size of this table, in bytes.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "tableObjectCount",
          "description": "Number of objects in this table.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "alias",
          "description": "Alias for this table.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isTemporary",
          "description": "Whether this table is temporary (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isQueryPreview",
          "description": "Whether preview queries are allowed for this table (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryPreviewConfig",
          "description": "Configuration for preview queries.",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "externalLocation",
          "description": "External location of this table, for example: an S3 object location.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "externalLocationRegion",
          "description": "Region of the external location of this table, for example: S3 region.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "externalLocationFormat",
          "description": "Format of the external location of this table, for example: JSON, CSV, PARQUET, etc.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "indexType": "STRING",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isPartitioned",
          "description": "Whether this table is partitioned (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "partitionStrategy",
          "description": "Partition strategy for this table.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "partitionCount",
          "description": "Number of partitions in this table.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "tableDefinition",
          "description": "Definition of the table.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "partitionList",
          "description": "List of partitions in this table.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isSharded",
          "description": "Whether this table is a sharded table (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "tableType",
          "description": "Type of the table.",
          "typeName": "table_type",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "icebergCatalogName",
          "description": "Iceberg table catalog name (can be any user defined name)",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "icebergTableType",
          "description": "Iceberg table type (managed vs unmanaged)",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "icebergCatalogSource",
          "description": "Iceberg table catalog type (glue, polaris, snowflake)",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "icebergCatalogTableName",
          "description": "Catalog table name (actual table name on the catalog side).",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "tableImpalaParameters",
          "description": "Extra attributes for Impala",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "icebergCatalogTableNamespace",
          "description": "Catalog table namespace (actual database name on the catalog side).",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "tableExternalVolumeName",
          "description": "External volume name for the table.",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "icebergTableBaseLocation",
          "description": "Iceberg table base location inside the external volume.",
          "typeName": "string",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "tableRetentionTime",
          "description": "Data retention time in days.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        }
      ]
    },
    {
      "name": "TablePartition",
      "superTypes":
      [
        "SQL"
      ],
      "description": "Instance of a database table partition in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "constraint",
          "description": "Constraint that defines this table partition.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "columnCount",
          "description": "Number of columns in this partition.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "rowCount",
          "description": "Number of rows in this partition.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sizeBytes",
          "description": "Size of this partition, in bytes.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "alias",
          "description": "Alias for this partition.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isTemporary",
          "description": "Whether this partition is temporary (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isQueryPreview",
          "description": "Whether preview queries for this partition are allowed (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryPreviewConfig",
          "description": "Configuration for the preview queries.",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "externalLocation",
          "description": "External location of this partition, for example: an S3 object location.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "externalLocationRegion",
          "description": "Region of the external location of this partition, for example: S3 region.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "externalLocationFormat",
          "description": "Format of the external location of this partition, for example: JSON, CSV, PARQUET, etc.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "indexType": "STRING",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isPartitioned",
          "description": "Whether this partition is further partitioned (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "partitionStrategy",
          "description": "Partition strategy of this partition.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "indexType": "STRING",
          "includeInNotification": true
        },
        {
          "name": "partitionCount",
          "description": "Number of sub-partitions of this partition.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "partitionList",
          "description": "List of sub-partitions in this partition.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes":
      [
        "SQL"
      ],
      "name": "View",
      "description": "Instance of a database view in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "columnCount",
          "description": "Number of columns in this view.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "rowCount",
          "description": "Number of rows in this view.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sizeBytes",
          "description": "Size of this view, in bytes.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isQueryPreview",
          "description": "Whether preview queries are allowed on this view (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryPreviewConfig",
          "description": "Configuration for preview queries on this view.",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "alias",
          "description": "Alias for this view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isTemporary",
          "description": "Whether this view is temporary (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "definition",
          "description": "SQL definition of this view.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes":
      [
        "Catalog"
      ],
      "name": "SaaS",
      "description": "Base class for SaaS application assets.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      []
    },
    {
      "superTypes":
      [
        "Catalog"
      ],
      "name": "SchemaRegistry",
      "description": "Instance of a schema registry in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "schemaRegistrySchemaType",
          "typeName": "SchemaRegistrySchemaType",
          "description": "Type of language or specification used to define the schema, for example: JSON, Protobuf, etc.",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "schemaRegistrySchemaId",
          "typeName": "string",
          "description": "Unique identifier for schema definition set by the schema registry.",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "name": "Tag",
      "description": "Base class for all (source-specific) tag assets.",
      "superTypes":
      [
        "Catalog"
      ],
      "serviceType": "atlan",
      "typeVersion": "1.1",
      "attributeDefs":
      [
        {
          "name": "tagId",
          "description": "Unique identifier of the tag in the source system.",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "tagAttributes",
          "description": "Attributes associated with the tag in the source system.",
          "typeName": "array<SourceTagAttribute>",
          "cardinality": "SET",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "tagAllowedValues",
          "description": "Allowed values for the tag in the source system. These are denormalized from tagAttributes for ease of querying.",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false,
          "indexType": "STRING",
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "mappedClassificationName",
          "description": "Name of the classification in Atlan that is mapped to this tag.",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "SourceTag",
      "category": "ENTITY",
      "description": "Instance of a source system-imported tag in Atlan.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "tagCustomConfiguration",
          "description": "Specifies custom configuration elements based on the system the tag is being imported from.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true,
          "skipScrubbing": false,
          "indexType": "STRING"
        }
      ],
      "superTypes":
      [
        "Tag"
      ]
    },
    {
      "name": "TagAttachment",
      "description": "Represents Source tag association asset",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlan",
      "typeVersion": "1.1",
      "attributeDefs":
      [
        {
          "name": "tagQualifiedName",
          "description": "Represents associated source tag's qualified name",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        },
        {
          "name": "tagAttachmentStringValue",
          "typeName": "string",
          "description": "Represents associated tag value",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": true,
          "indexTypeESFields":
          {
            "text":
            {
              "type": "text",
              "analyzer": "atlan_text_analyzer"
            }
          }
        }
      ]
    },
    {
      "name": "Cloud",
      "description": "Base class for cloud assets.",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs":
      []
    },
    {
      "superTypes":
      [
        "Asset"
      ],
      "name": "Connection",
      "description": "Instance of a connection to a data source in Atlan.",
      "typeVersion": "1.2",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "category",
          "description": "Type of connection, for example WAREHOUSE, RDBMS, etc.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "subCategory",
          "description": "Subcategory of this connection.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "skipScrubbing": true,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "host",
          "description": "Host name of this connection's source.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "port",
          "description": "Port number to this connection's source.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "allowQuery",
          "description": "Whether using this connection to run queries on the source is allowed (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "allowQueryPreview",
          "description": "Whether using this connection to run preview queries on the source is allowed (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryPreviewConfig",
          "description": "Configuration for preview queries.",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryConfig",
          "description": "Query config for this connection.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "credentialStrategy",
          "description": "Credential strategy to use for this connection for queries.",
          "typeName": "string",
          "defaultValue": "default",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "previewCredentialStrategy",
          "description": "Credential strategy to use for this connection for preview queries.",
          "typeName": "string",
          "indexType": "STRING",
          "defaultValue": "default",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "policyStrategy",
          "description": "Policy strategy is a configuration that determines whether the Atlan policy will be applied to the results of insight queries and whether the query will be rewritten, applicable for stream api call made from insight screen",
          "typeName": "string",
          "indexType": "STRING",
          "defaultValue": "default",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "policyStrategyForSamplePreview",
          "description": "Policy strategy is a configuration that determines whether the Atlan policy will be applied to the results of insight queries and whether the query will be rewritten. policyStrategyForSamplePreview config is applicable for sample preview call from assets screen",
          "typeName": "string",
          "indexType": "STRING",
          "defaultValue": "default",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "queryUsernameStrategy",
          "description": "Username strategy to use for this connection for queries.",
          "typeName": "query_username_strategy",
          "indexType": "STRING",
          "defaultValue": "connectionUsername",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "rowLimit",
          "description": "Maximum number of rows that can be returned for the source.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "queryTimeout",
          "description": "Maximum time a query should be allowed to run before timing out.",
          "typeName": "long",
          "defaultValue": 10,
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "defaultCredentialGuid",
          "description": "Unique identifier (GUID) for the default credentials to use for this connection.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "connectorIcon",
          "description": "Unused. Only the value of connectorType impacts icons.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "connectorImage",
          "description": "Unused. Only the value of connectorType impacts icons.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sourceLogo",
          "description": "Unused. Only the value of connectorType impacts icons.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isSampleDataPreviewEnabled",
          "description": "Whether sample data can be previewed for this connection (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "popularityInsightsTimeframe",
          "description": "Number of days over which popularity is calculated, for example 30 days.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "hasPopularityInsights",
          "description": "Whether this connection has popularity insights (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        },
        {
          "name": "connectionDbtEnvironments",
          "description": "",
          "typeName": "array<string>",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "indexType": "STRING",
          "includeInNotification": false
        },
        {
          "name": "connectionSSOCredentialGuid",
          "description": "Unique identifier (GUID) for the SSO credentials to use for this connection.",
          "typeName": "string",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "useObjectStorage",
          "description": "Whether to upload to S3, GCP, or another storage location (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "objectStorageUploadThreshold",
          "description": "Number of rows after which results should be uploaded to storage.",
          "typeName": "long",
          "isOptional": true,
          "cardinality": "SINGLE",
          "defaultValue": 100000,
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "vectorEmbeddingsEnabled",
          "description": "",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "vectorEmbeddingsUpdatedAt",
          "description": "",
          "typeName": "date",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": false
        }
      ]
    },
    {
      "name": "ConnectionProcess",
      "description": "Instance of a lineage connection process in Atlan.",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlan",
      "typeVersion": "1.1",
      "attributeDefs":
      [
        {
          "name": "inputs",
          "description": "Assets of type connection that are inputs to this connection process.",
          "typeName": "array<Connection>",
          "cardinality": "SET",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "outputs",
          "description": "Assets of type connection that are outputs to this connection process.",
          "typeName": "array<Connection>",
          "cardinality": "SET",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "superTypes":
      [
        "Asset"
      ],
      "name": "Form",
      "description": "Instance of a form in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      [
        {
          "name": "formFields",
          "description": "Fields in a form.",
          "typeName": "array<FormField>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "formOptions",
          "description": "Options of the form.",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        }
      ]
    },
    {
      "name": "Infrastructure",
      "description": "deprecated",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlas_core",
      "typeVersion": "1.1",
      "attributeDefs":
      []
    },
    {
      "name": "Process",
      "description": "Instance of a lineage process in Atlan.",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlas_core",
      "typeVersion": "1.1",
      "attributeDefs":
      [
        {
          "name": "inputs",
          "description": "Assets that are inputs to this process.",
          "typeName": "array<Catalog>",
          "cardinality": "SET",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "outputs",
          "description": "Assets that are outputs from this process.",
          "typeName": "array<Catalog>",
          "cardinality": "SET",
          "isIndexable": false,
          "skipScrubbing": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "code",
          "description": "Code that ran within the process.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "sql",
          "description": "SQL query that ran to produce the outputs.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "parentConnectionProcessQualifiedName",
          "description": "",
          "typeName": "array<string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "indexType": "STRING",
          "includeInNotification": false
        },
        {
          "name": "ast",
          "description": "Parsed AST of the code or SQL statements that describe the logic of this process.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": false,
          "includeInNotification": true
        },
        {
          "name": "additionalEtlContext",
          "description": "Additional Context of the ETL pipeline/notebook which creates the process.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "aiDatasetType",
          "description": "Dataset type for AI Model - dataset process.",
          "typeName": "AIDatasetType",
          "isOptional": true,
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": false,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes":
      [
        "Process"
      ],
      "name": "BIProcess",
      "description": "Instance of business intelligence lineage in Atlan. These are used to short-circuit lineage from table-like assets directly to dashboard-like assets.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      []
    },
    {
      "superTypes":
      [
        "Process"
      ],
      "name": "ColumnProcess",
      "description": "Instance of a column-level lineage process in Atlan. Inputs and outputs of these processes should be columns.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs":
      []
    },
    {
      "name": "ProcessExecution",
      "description": "",
      "superTypes":
      [
        "Asset"
      ],
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "attributeDefs":
      []
    },
    {
      "name": "AuthService",
      "superTypes": [
        "Asset"
      ],
      "description": "Model to store auth service in Atlas",
      "serviceType": "atlan",
      "typeVersion": "1.1",
      "attributeDefs": [
        {
          "name": "authServiceType",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "tagService",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "authServiceIsEnabled",
          "typeName": "boolean",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "defaultValue": true,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "authServiceConfig",
          "typeName": "map<string,string>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "authServicePolicyLastSync",
          "typeName": "long",
          "isOptional": true,
          "defaultValue": 0,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "name": "AuthPolicy",
      "description": "Model to store an accesscontrol policy in Atlas",
      "superTypes": [
        "Asset"
      ],
      "serviceType": "atlan",
      "typeVersion": "1.1",
      "attributeDefs":
      [
        {
          "name": "policyType",
          "typeName": "AuthPolicyType",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyServiceName",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyCategory",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policySubCategory",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyUsers",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyGroups",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyRoles",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyActions",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyResources",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyResourceCategory",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyPriority",
          "typeName": "int",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "defaultValue": 0,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "isPolicyEnabled",
          "typeName": "boolean",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "defaultValue": true,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyMaskType",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyValiditySchedule",
          "typeName": "array<AuthPolicyValiditySchedule>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "defaultValue": true,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "policyResourceSignature",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "policyDelegateAdmin",
          "typeName": "boolean",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "defaultValue": false,
          "skipScrubbing": true,
          "includeInNotification": true
        },
        {
          "name": "policyConditions",
          "typeName": "array<AuthPolicyCondition>",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        }
      ]
    },
    {
      "name": "AccessControl",
      "superTypes": [
        "Asset"
      ],
      "description": "Atlan Type representing parent model for Persona, Purpose",
      "serviceType": "atlan",
      "typeVersion": "1.4",
      "attributeDefs": [
        {
          "name": "isAccessControlEnabled",
          "typeName": "boolean",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "defaultValue": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "denyCustomMetadataGuids",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "denyAssetTabs",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "denyAssetFilters",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "channelLink",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "denyAssetTypes",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "denyNavigationPages",
          "typeName": "array<string>",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "defaultNavigation",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "displayPreferences",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        }
      ]
    },
    {
      "name": "Persona",
      "superTypes": [
        "AccessControl"
      ],
      "description": "Atlan Type representing a Persona model",
      "serviceType": "atlan",
      "typeVersion": "1.1",
      "attributeDefs": [
        {
          "name": "personaGroups",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "personaUsers",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        },
        {
          "name": "roleId",
          "typeName": "string",
          "indexType": "STRING",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "includeInNotification": false
        }
      ]
    },
    {
      "name": "Purpose",
      "superTypes": [
        "AccessControl"
      ],
      "description": "Atlan Type representing a Purpose model",
      "serviceType": "atlan",
      "typeVersion": "1.2",
      "attributeDefs": [
        {
          "name": "purposeClassifications",
          "typeName": "array<string>",
          "indexType": "STRING",
          "cardinality": "SET",
          "isIndexable": false,
          "isOptional": true,
          "isUnique": false,
          "skipScrubbing": true,
          "includeInNotification": false
        }
      ]
    },
    {
      "name": "StakeholderTitle",
      "description": "Instance of a stakeholder title for Domains in Atlan",
      "superTypes": [
        "Asset"
      ],
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "attributeDefs": [
        {
          "name": "stakeholderTitleDomainQualifiedNames",
          "description": "qualified name array representing the Domains for which this StakeholderTitle is applicable",
          "typeName": "array<string>",
          "indexType": "STRING",
          "isOptional": true,
          "cardinality": "SET",
          "isUnique": false,
          "isIndexable": false,
          "skipScrubbing": true,
          "includeInNotification": false
        }
      ]
    },
    {
      "superTypes": [
        "Catalog"
      ],
      "name": "BI",
      "description": "Base class for business intelligence assets.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs": []
    },
    {
      "superTypes": [
        "BI"
      ],
      "name": "Tableau",
      "description": "Base class for Tableau assets.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs": []
    },
    {
      "superTypes": [
        "Tableau"
      ],
      "name": "TableauProject",
      "description": "Instance of a Tableau project in Atlan. These are used to organize other assets and for access control, and can be nested.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs": [
        {
          "name": "siteQualifiedName",
          "description": "Unique name of the site in which this project exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "topLevelProjectQualifiedName",
          "description": "Unique name of the top-level project in which this project exists, if this is a nested project.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "isTopLevelProject",
          "description": "Whether this project is a top-level project (true) or not (false).",
          "typeName": "boolean",
          "isOptional": true,
          "defaultValue": false,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "projectHierarchy",
          "description": "List of top-level projects with their nested child projects.",
          "typeName": "array<map<string,string>>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes": [
        "Tableau"
      ],
      "name": "TableauWorkbook",
      "description": "Instance of a Tableau workbook in Atlan. These contain one or more worksheets, datasources or dashboards.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs": [
        {
          "name": "siteQualifiedName",
          "description": "Unique name of the site in which this workbook exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "projectQualifiedName",
          "description": "Unique name of the project in which this workbook exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields": {
            "keyword": {
              "type": "keyword"
            }
          }
        },
        {
          "name": "topLevelProjectName",
          "description": "Simple name of the top-level project in which this workbook exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "topLevelProjectQualifiedName",
          "description": "Unique name of the top-level project in which this workbook exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "projectHierarchy",
          "description": "List of top-level projects with their nested child projects.",
          "typeName": "array<map<string,string>>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes": [
        "Tableau"
      ],
      "name": "TableauCalculatedField",
      "description": "Instance of a Tableau calculated field in Atlan. These are created by combining two or more fields using a formula, and can be created at datasource or worksheet level.",
      "typeVersion": "2.0",
      "serviceType": "atlan",
      "attributeDefs": [
        {
          "name": "siteQualifiedName",
          "description": "Unique name of the site in which this calculated field exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "projectQualifiedName",
          "description": "Unique name of the project in which this calculated field exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields": {
            "keyword": {
              "type": "keyword"
            }
          }
        },
        {
          "name": "topLevelProjectQualifiedName",
          "description": "Unique name of the top-level project in which this calculated field exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "workbookQualifiedName",
          "description": "Unique name of the workbook in which this calculated field exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "datasourceQualifiedName",
          "description": "Unique name of the datasource in which this calculated field exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "projectHierarchy",
          "description": "List of top-level projects and their nested projects.",
          "typeName": "array<map<string,string>>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "dataCategory",
          "description": "Data category of this field.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "role",
          "description": "Role of this field, for example: 'dimension', 'measure', or 'unknown'.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "tableauDataType",
          "description": "Data type of the field, from Tableau.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "indexType": "STRING",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields": {
            "text": {
              "type": "text"
            }
          }
        },
        {
          "name": "formula",
          "description": "Formula for this calculated field.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "upstreamFields",
          "description": "List of fields that are upstream to this calculated field.",
          "typeName": "array<map<string,string>>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    },
    {
      "superTypes": [
        "Tableau"
      ],
      "name": "TableauWorksheet",
      "description": "Instance of a Tableau worksheet in Atlan.",
      "typeVersion": "1.0",
      "serviceType": "atlan",
      "attributeDefs": [
        {
          "name": "siteQualifiedName",
          "description": "Unique name of the site in which this worksheet exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "projectQualifiedName",
          "description": "Unique name of the project in which this worksheet exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true,
          "indexTypeESFields": {
            "keyword": {
              "type": "keyword"
            }
          }
        },
        {
          "name": "topLevelProjectQualifiedName",
          "description": "Unique name of the top-level project in which this worksheet exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "projectHierarchy",
          "description": "List of top-level projects with their nested child projects.",
          "typeName": "array<map<string,string>>",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true,
          "includeInNotification": true
        },
        {
          "name": "workbookQualifiedName",
          "description": "Unique name of the workbook in which this worksheet exists.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "skipScrubbing": true,
          "isIndexable": true,
          "includeInNotification": true
        }
      ]
    }
  ],
  "relationshipDefs":
  [
    {
      "name": "UserDefRelationship",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "description": "A generic relationship to hold relationship between any type of asset",
      "relationshipLabel": "__Referenceable.userDefRelationshipTo",
      "endDef1":
      {
        "type": "Referenceable",
        "name": "userDefRelationshipTo",
        "cardinality": "SET"
      },
      "endDef2":
      {
        "type": "Referenceable",
        "name": "userDefRelationshipFrom",
        "cardinality": "SET"
      },
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "toTypeLabel",
          "description": "Name for the relationship when referring from endDef1 asset to endDef2 asset",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "indexType": "STRING"
        },
        {
          "name": "fromTypeLabel",
          "description": "Name for the relationship when referring from endDef2 asset to endDef1 asset",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": false,
          "isOptional": true,
          "indexType": "STRING"
        }
      ]
    },
    {
      "name": "AtlasGlossarySemanticAssignment",
      "description": "Assigns meaning to an asset by linking the term that describes the meaning of the asset. The semantic assignment needs to be a controlled relationship when glossary definitions are used to provide classifications for the data assets and hence define how the data is to be governed.",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Details about the semantic assignment.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true
        },
        {
          "name": "expression",
          "description": "Expression that was used to create the semantic assignment.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true
        },
        {
          "name": "status",
          "description": "Status of the semantic assignment, typically used by discovery engines.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true
        },
        {
          "name": "confidence",
          "description": "Level of confidence (0-100%) in the correctness of the semantic assignment, typically used by discovery engines.",
          "typeName": "int",
          "isOptional": true,
          "cardinality": "SINGLE",
          "isUnique": false,
          "isIndexable": true
        },
        {
          "name": "createdBy",
          "description": "Username of the user who created the semantic assignment.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true
        },
        {
          "name": "steward",
          "description": "User responsible for assessing the semantic assignment and deciding if it should be approved or not.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true
        },
        {
          "name": "source",
          "description": "Source of the semantic assignment.",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 0,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true
        }
      ],
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "ONE_TO_TWO",
      "endDef1":
      {
        "type": "AtlasGlossaryTerm",
        "name": "assignedEntities",
        "description": "Assets assigned this term.",
        "isContainer": false,
        "cardinality": "SET"
      },
      "endDef2":
      {
        "type": "Referenceable",
        "name": "meanings",
        "description": "Glossary terms that are linked to this asset.",
        "isContainer": false,
        "cardinality": "SET"
      }
    },
    {
      "name": "AtlasGlossaryTermAnchor",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Links each term to exactly one glossary, its home glossary. If the glossary is deleted, then so are all the terms linked to it.",
      "endDef1":
      {
        "name": "terms",
        "description": "Terms contained within this glossary.",
        "type": "AtlasGlossary",
        "cardinality": "SET",
        "isContainer": true
      },
      "endDef2":
      {
        "name": "anchor",
        "description": "Glossary in which this term is contained.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SINGLE"
      },
      "relationshipCategory": "COMPOSITION",
      "propagateTags": "NONE"
    },
    {
      "name": "AtlasGlossaryTermCategorization",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Organizes terms into categories. A term may be linked with many categories and a category may have many terms linked to it. This relationship may connect terms and categories both in the same glossary or in different glossaries.",
      "endDef1":
      {
        "name": "terms",
        "description": "Terms organized within this category.",
        "type": "AtlasGlossaryCategory",
        "cardinality": "SET",
        "isContainer": true
      },
      "endDef2":
      {
        "name": "categories",
        "description": "Categories within which this term is organized.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "relationshipCategory": "AGGREGATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Details about the term categorization.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        },
        {
          "name": "status",
          "description": "Status of the term categorization, typically used by discovery engines.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true,
          "isUnique": false
        }
      ]
    },
    {
      "name": "AtlasGlossaryCategoryAnchor",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Links each category to exactly one glossary, its home glossary. If the glossary is deleted then so are all the categories linked to it.",
      "endDef1":
      {
        "name": "categories",
        "description": "Categories contained within this glossary.",
        "type": "AtlasGlossary",
        "cardinality": "SET",
        "isContainer": true
      },
      "endDef2":
      {
        "name": "anchor",
        "description": "Glossary in which this category is contained.",
        "type": "AtlasGlossaryCategory",
        "cardinality": "SINGLE"
      },
      "relationshipCategory": "COMPOSITION",
      "propagateTags": "NONE"
    },
    {
      "name": "AtlasGlossaryCategoryHierarchyLink",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Organizes categories into a hierarchy to, for example, create a structure for a taxonomy. A category may have none or one super-categories. This super-category may be in a different glossary.",
      "endDef1":
      {
        "name": "childrenCategories",
        "description": "Child categories organized within this category.",
        "type": "AtlasGlossaryCategory",
        "cardinality": "SET",
        "isContainer": true
      },
      "endDef2":
      {
        "name": "parentCategory",
        "description": "Parent category in which this category is located (or empty if this is a root-level category).",
        "type": "AtlasGlossaryCategory",
        "cardinality": "SINGLE"
      },
      "relationshipCategory": "AGGREGATION",
      "propagateTags": "NONE"
    },
    {
      "name": "AtlasGlossaryRelatedTerm",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Links terms that may also be of interest. It is like a 'see also' link in a dictionary.",
      "endDef1":
      {
        "name": "seeAlso",
        "description": "Linked terms that may also be of interest.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "endDef2":
      {
        "name": "seeAlso",
        "description": "Linked terms that may also be of interest.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Explains why the linked term is of interest.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "expression",
          "description": "Expression used to set the related term.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "status",
          "description": "Status of the related term assignment, typically used by discovery engines.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "steward",
          "description": "User responsible for assessing the relationship and deciding if it should be approved or not.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "source",
          "description": "Source of the related term assignment.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        }
      ]
    },
    {
      "name": "AtlasGlossarySynonym",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Terms that have the same (or a very similar) meaning, in the same language.",
      "endDef1":
      {
        "name": "synonyms",
        "description": "Terms that have the same (or a very similar) meaning, in the same language.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "endDef2":
      {
        "name": "synonyms",
        "description": "Terms that have the same (or a very similar) meaning, in the same language.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Details about the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "expression",
          "description": "Expression used to set the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "status",
          "description": "Status of the synonym assignment, typically used by discovery engines.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "steward",
          "description": "User responsible for assessing the relationship and deciding if it should be approved or not.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "source",
          "description": "Source of the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        }
      ]
    },
    {
      "name": "AtlasGlossaryAntonym",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Terms that have the opposite (or near opposite) meaning, in the same language.",
      "endDef1":
      {
        "name": "antonyms",
        "description": "Terms that have the opposite (or near opposite) meaning, in the same language.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "endDef2":
      {
        "name": "antonyms",
        "description": "Terms that have the opposite (or near opposite) meaning, in the same language.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Details about the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "expression",
          "description": "Expression that was used to set the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "status",
          "description": "Status of the relationship, typically used by discovery engines.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "steward",
          "description": "User responsible for assessing the relationship and deciding if it should be approved or not.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "source",
          "description": "Source of the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        }
      ]
    },
    {
      "name": "AtlasGlossaryPreferredTerm",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Indicates term(s) should be used in place of another. This relationship can be used to encourage adoption of newer vocabularies. This is a weaker version of ReplacementTerm.",
      "endDef1":
      {
        "name": "preferredTerms",
        "description": "Preferred term(s) to use instead of this term.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "endDef2":
      {
        "name": "preferredToTerms",
        "description": "Other term(s) that are less common or less preferred than this term.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Details about the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "expression",
          "description": "Expression used to set the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "status",
          "description": "Status of the relationship.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "steward",
          "description": "User responsible for assessing the relationship and deciding if it should be approved or not.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "source",
          "description": "Source of the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        }
      ]
    },
    {
      "name": "AtlasGlossaryReplacementTerm",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Indicates term(s) must be used instead of another. This is stronger version of the PreferredTerm.",
      "endDef1":
      {
        "name": "replacedBy",
        "description": "Term(s) that must no longer be used.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "endDef2":
      {
        "name": "replacementTerms",
        "description": "Term(s) that must be used instead.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Details about the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "expression",
          "description": "Expression used to set the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "status",
          "description": "Status of the relationship, typically used by discovery engines.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "steward",
          "description": "User responsible for assessing the relationship and deciding if it should be approved or not.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "source",
          "description": "Source of the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        }
      ]
    },
    {
      "name": "AtlasGlossaryTranslation",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Related terms that represent the same meaning, but each written in a different language. Hence one is a translation of the other. The language of each term is defined in the Glossary object that anchors the term.",
      "endDef1":
      {
        "name": "translatedTerms",
        "description": "Term(s) that are a translation of this term.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "endDef2":
      {
        "name": "translationTerms",
        "description": "Term(s) for which this term is a translation.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Details about the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "expression",
          "description": "Expression used to set the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "status",
          "description": "Status of the relationship, typically used by discovery engines.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "steward",
          "description": "User responsible for assessing the relationship and deciding if it should be approved or not.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "source",
          "description": "Source of the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        }
      ]
    },
    {
      "name": "AtlasGlossaryIsARelationship",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Relationship between a more abstract and more concrete concept. For example, this relationship would be use to say that 'Cat' ISA 'Animal'.",
      "endDef1":
      {
        "name": "classifies",
        "description": "More general term that defines a group of terms, for example: 'animal'.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "endDef2":
      {
        "name": "isA",
        "description": "More specific term that is a sub-class of another term, for example: 'cat'.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Details about the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "expression",
          "description": "Expression used to set the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "status",
          "description": "Status of the relationship, typically used by discovery engines.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "steward",
          "description": "User responsible for assessing the relationship and deciding if it should be approved or not.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "source",
          "description": "Source of the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        }
      ]
    },
    {
      "name": "AtlasGlossaryValidValue",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "description": "Terms that represent valid values for another, for example: 'red', 'blue', 'green' could all be valid values for a term 'color'.",
      "endDef1":
      {
        "name": "validValuesFor",
        "description": "Term for which this is a valid value.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "endDef2":
      {
        "name": "validValues",
        "description": "Valid values for this term.",
        "type": "AtlasGlossaryTerm",
        "cardinality": "SET"
      },
      "relationshipCategory": "ASSOCIATION",
      "propagateTags": "NONE",
      "attributeDefs":
      [
        {
          "name": "description",
          "description": "Details about the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "expression",
          "description": "Expression used to set the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "status",
          "description": "Status of the relationship, typically used by discovery engines.",
          "typeName": "AtlasGlossaryTermRelationshipStatus",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "steward",
          "description": "User responsible for assessing the relationship and deciding if it should be approved or not.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        },
        {
          "name": "source",
          "description": "Source of the relationship.",
          "typeName": "string",
          "cardinality": "SINGLE",
          "isIndexable": true,
          "isOptional": true
        }
      ]
    },
    {
      "name": "schema_calculation_view",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Schema.calculationViews",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Schema",
        "name": "calculationViews",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": false
      },
      "endDef2":
      {
        "type": "CalculationView",
        "name": "atlanSchema",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": false
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "table_columns",
      "description": "Containment relationship between table (parent) and columns (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Table.columns",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Table",
        "name": "columns",
        "description": "Columns that exist within this table.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Column",
        "name": "table",
        "description": "Table in which this column exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "column_nestedColumns",
      "description": "Hierarchical relationship between nested columns.",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Column.nestedColumns",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Column",
        "name": "nestedColumns",
        "description": "Nested columns that exist within this column.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Column",
        "name": "parentColumn",
        "description": "Column in which this sub-column is nested.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "TWO_TO_ONE"
    },
    {
      "name": "table_partition_columns",
      "description": "Containment relationship between table partition (parent) and columns (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__TablePartition.columns",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "TablePartition",
        "name": "columns",
        "description": "Columns that exist within this table partition.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Column",
        "name": "tablePartition",
        "description": "Table partition that contains this column.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "view_columns",
      "description": "Containment relationship between view (parent) and columns (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__View.columns",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "View",
        "name": "columns",
        "description": "Columns that exist within this view.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Column",
        "name": "view",
        "description": "View in which this column exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "calculation_view_columns",
      "description": "Containment relationship between calculation view (parent) and columns (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__CalculationView.columns",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "CalculationView",
        "name": "columns",
        "description": "Columns that exist within this sap calculate view.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": false
      },
      "endDef2":
      {
        "type": "Column",
        "name": "calculationView",
        "description": "Calculate view in which this column exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": false
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "materialised_view_columns",
      "description": "Containment relationship between materialized view (parent) and columns (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__materialised_view.columns",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "MaterialisedView",
        "name": "columns",
        "description": "Columns that exist within this materialized view.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Column",
        "name": "materialisedView",
        "description": "Materialized view in which this column exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "foreign_key_columns",
      "description": "Inter-relationship between foreign key columns.",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Column.foreignKeyTo",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Column",
        "name": "foreignKeyTo",
        "description": "Columns that use this column as a foreign key.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": false
      },
      "endDef2":
      {
        "type": "Column",
        "name": "foreignKeyFrom",
        "description": "Column this foreign key column refers to.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": false
      },
      "propagateTags": "NONE"
    },
    {
      "name": "schema_functions",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Schema.functions",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Schema",
        "name": "functions",
        "description": "Functions that exist within this schema.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Function",
        "name": "functionSchema",
        "description": "Schema in which this function exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "schema_materialised_views",
      "description": "Containment relationship between schema (parent) and materialized views (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Schema.materialised_views",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Schema",
        "name": "materialisedViews",
        "description": "Materialized views that exist within this schema.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "MaterialisedView",
        "name": "atlanSchema",
        "description": "Schema in which this materialized view exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "schema_procedures",
      "description": "Containment relationship between schema (parent) and stored procedures (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Schema.procedures",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Schema",
        "name": "procedures",
        "description": "Stored procedures that exist within this schema.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Procedure",
        "name": "atlanSchema",
        "description": "Schema in which this stored procedure exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "table_queries",
      "description": "Inter-relationship between tables and queries.",
      "typeVersion": "1.0",
      "relationshipCategory": "ASSOCIATION",
      "relationshipLabel": "__Table.queries",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Table",
        "name": "queries",
        "description": "Queries that access this table.",
        "isContainer": false,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Query",
        "name": "tables",
        "description": "Tables this query accesses.",
        "isContainer": false,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "propagateTags": "NONE"
    },
    {
      "name": "view_queries",
      "description": "Inter-relationship between views and queries.",
      "typeVersion": "1.0",
      "relationshipCategory": "ASSOCIATION",
      "relationshipLabel": "__View.queries",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "View",
        "name": "queries",
        "description": "Queries that access this view.",
        "isContainer": false,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Query",
        "name": "views",
        "description": "Views this query accesses.",
        "isContainer": false,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "propagateTags": "NONE"
    },
    {
      "name": "column_queries",
      "description": "Inter-relationship between columns and queries.",
      "typeVersion": "1.0",
      "relationshipCategory": "ASSOCIATION",
      "relationshipLabel": "__Column.queries",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Column",
        "name": "queries",
        "description": "Queries that access this column.",
        "isContainer": false,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Query",
        "name": "columns",
        "description": "Columns this query accesses.",
        "isContainer": false,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "propagateTags": "NONE"
    },
    {
      "name": "database_schemas",
      "description": "Containment relationship between database (parent) and schemas (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Database.schemas",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Database",
        "name": "schemas",
        "description": "Schemas that exist within this database.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Schema",
        "name": "database",
        "description": "Database in which this schema exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "schema_tables",
      "description": "Containment relationship between schema (parent) and tables (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Schema.tables",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Schema",
        "name": "tables",
        "description": "Tables that exist within this schema.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Table",
        "name": "atlanSchema",
        "description": "Schema in which this table exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "table_facts_dimensions",
      "typeVersion": "1.0",
      "description": "Relationship between fact tables and dimension tables.",
      "relationshipCategory": "ASSOCIATION",
      "relationshipLabel": "__Table.dimensions",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Table",
        "name": "dimensions",
        "description": "",
        "isContainer": false,
        "cardinality": "SET",
        "isLegacyAttribute": false
      },
      "endDef2":
      {
        "type": "Table",
        "name": "facts",
        "description": "",
        "isContainer": false,
        "cardinality": "SET",
        "isLegacyAttribute": false
      },
      "propagateTags": "NONE"
    },
    {
      "name": "partition_tables",
      "description": "Containment relationship between table (parent) and partitions (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Table.partitions",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Table",
        "name": "partitions",
        "description": "Partitions that exist within this table.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "TablePartition",
        "name": "parentTable",
        "description": "Table in which this partition exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "partition_parent_table_partition_child_tables",
      "description": "Hierarchical relationship between table partitions.",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__TablePartition.childTablePartitions",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "TablePartition",
        "name": "childTablePartitions",
        "description": "Partitions that exist within this partition.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "TablePartition",
        "name": "parentTablePartition",
        "description": "Partition in which this partition exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "schema_views",
      "description": "Containment relationship between schema (parent) and views (children).",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Schema.views",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Schema",
        "name": "views",
        "description": "Views that exist within this schema.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "View",
        "name": "atlanSchema",
        "description": "Schema in which this view exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "connection_process_inputs",
      "description": "Inter-relationships between inputs and connection processes.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__ConnectionProcess.inputs",
      "endDef1":
      {
        "type": "ConnectionProcess",
        "name": "inputs",
        "description": "Connection assets that are inputs to this connection process.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Connection",
        "name": "inputToConnectionProcesses",
        "description": "Connection process to which this asset provides input.",
        "isContainer": false,
        "cardinality": "SET"
      },
      "propagateTags": "NONE"
    },
    {
      "name": "connection_process_outputs",
      "description": "Inter-relationships between outputs and connection processes.",
      "serviceType": "atlan",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__ConnectionProcess.outputs",
      "endDef1":
      {
        "type": "ConnectionProcess",
        "name": "outputs",
        "description": "Connection assets that are outputs from this connection process",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Connection",
        "name": "outputFromConnectionProcesses",
        "description": "Connection processs from which this asset is produced as output.",
        "isContainer": false,
        "cardinality": "SET"
      },
      "propagateTags": "NONE"
    },
    {
      "name": "catalog_process_inputs",
      "description": "Inter-relationships between inputs and processes.",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Process.inputs",
      "endDef1":
      {
        "type": "Process",
        "name": "inputs",
        "description": "Assets that are inputs to this process.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Catalog",
        "name": "inputToProcesses",
        "description": "Processes to which this asset provides input.",
        "isContainer": false,
        "cardinality": "SET"
      },
      "propagateTags": "TWO_TO_ONE"
    },
    {
      "name": "process_catalog_outputs",
      "description": "Inter-relationships between outputs and processes.",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Process.outputs",
      "endDef1":
      {
        "type": "Process",
        "name": "outputs",
        "description": "Assets that are outputs from this process.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "Catalog",
        "name": "outputFromProcesses",
        "description": "Processes from which this asset is produced as output.",
        "isContainer": false,
        "cardinality": "SET"
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "column_lineage",
      "typeVersion": "1.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__Process.columnProcesses",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "Process",
        "name": "columnProcesses",
        "description": "Processes that detail column-level lineage for this process.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2":
      {
        "type": "ColumnProcess",
        "name": "process",
        "description": "Parent process that contains this column-level process.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": true
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "__AtlasUserProfile_savedsearches",
      "serviceType": "atlas_core",
      "typeVersion": "1.0",
      "relationshipCategory": "COMPOSITION",
      "endDef1": {
        "type": "__AtlasUserProfile",
        "name": "savedSearches",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": true
      },
      "endDef2": {
        "type": "__AtlasUserSavedSearch",
        "name": "userProfile",
        "isContainer": false,
        "cardinality": "SINGLE"
      },
      "propagateTags": "NONE"
    },
    {
      "name": "access_control_policies",
      "typeVersion": "1.1",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__AccessControl.policies",
      "serviceType": "atlan",
      "endDef1":
      {
        "type": "AccessControl",
        "name": "policies",
        "isContainer": true,
        "cardinality": "SET"
      },
      "endDef2":
      {
        "type": "AuthPolicy",
        "name": "accessControl",
        "isContainer": false,
        "cardinality": "SINGLE"
      },
      "propagateTags": "ONE_TO_TWO"
    },
    {
      "name": "tableau_project_tableau_workbook",
      "description": "Containment relationship between project (parent) and workbooks (children).",
      "typeVersion": "1.1",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__TableauProject.workbooks",
      "serviceType": "atlan",
      "propagateTags": "ONE_TO_TWO",
      "endDef1": {
        "type": "TableauProject",
        "name": "workbooks",
        "description": "Workbooks that exist within this project.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": false
      },
      "endDef2": {
        "type": "TableauWorkbook",
        "name": "project",
        "description": "Project in which this workbook exists.",
        "isContainer": false,
        "cardinality": "SINGLE",
        "isLegacyAttribute": false
      }
    },
    {
      "name": "tableau_worksheets_tableau_calculated_fields",
      "description": "Inter-relationship between calculated fields and worksheets.",
      "typeVersion": "2.0",
      "relationshipCategory": "AGGREGATION",
      "relationshipLabel": "__TableauWorksheet.calculatedFields",
      "serviceType": "atlan",
      "endDef1": {
        "type": "TableauWorksheet",
        "name": "calculatedFields",
        "description": "Calculated fields that are used in this worksheet.",
        "isContainer": true,
        "cardinality": "SET",
        "isLegacyAttribute": false
      },
      "endDef2": {
        "type": "TableauCalculatedField",
        "name": "worksheets",
        "description": "Worksheets that use this calculated field.",
        "isContainer": false,
        "cardinality": "SET",
        "isLegacyAttribute": false
      }
    }
  ],
  "businessMetadataDefs":
  []
}